Explanation :

Base Cases:

If the length of the array is less than or equal to 1, it means we are already at the end, so the function returns 0.
If the first element is greater than or equal to the length of the array minus 1, we can reach the end in one jump, so the function returns 1.
If the first element is 0, we cannot make any progress, so the function returns -1.

Initialize Variables:

maxReach: This variable keeps track of the farthest position that can be reached from the current position.
step: Represents the number of steps remaining to be taken from the current position.
jump: Represents the total number of jumps taken.

Iterate through the Array:

A for loop is used to iterate through the array starting from index 1.
Check if the current index is the last index. If so, return the total number of jumps.
Check if the current element is greater than or equal to the remaining steps to the end. If so, return the total number of jumps plus 1.

Update maxReach and step:

Update maxReach to be the maximum of its current value and the sum of the current index and the value at that index.
Decrease the remaining steps (step) by 1.

Handle the Case when step becomes 0:

If step becomes 0, it means we need to take a jump.
Check if the current index is greater than or equal to maxReach. If so, return -1, as it means we cannot make any progress.
Update step to be the difference between maxReach and the current index.

Return -1 if the end is not reachable:

If the loop completes and we haven't reached the end, return -1.
